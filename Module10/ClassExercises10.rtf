{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 1. O(n^2)\
2. The fastest data structure was a hash set.\
4.            9\
   	   /    \\\
             7     11\
            /        /    \\\
           5       9      11  \
           /\
           1\
             \\ \
               3\
5. The search ends at 11.\
6. 10 would be the left child of 11.\
7.             5\
           /         \\\
        1            9\
          \\          /   \\\
           3       7    13\
		    /	\
		  11\
8. print() prints out the nodes of the tree with what is to the right and left. The output is not the best to understand. It has a queue so it knows which node comes where. \
10. 		      Ewok\
		/                   \\\
           Aqualish                  Gungan\
           /        \\                                 \\\
Amanin     Cerean                          Jawa\
					/\
				      Hutt\
	In-order printing is alphabetical order. \
11.                        1\
                               \\\
			2\
			  \\\
			    3\
			      \\\
			        4\
			          \\\
				 5\
				   \\\
				     6\
				       \\\
				         7\
				           \\\
					  8\
					    \\\
					      9\
					         \\\
						10\
	The height of this tree is 9.\
12.         2\
	   /   \\\
	1       3\
\
	    4\
	   /   \\\
	3       6\
          /  \\      /  \\\
         2   5   1   7\
\
	           5\
	     /          \\\
              3              7\
            /    \\           /    \\\
          2      12      6       8\
         / \\      /  \\      / \\        /  \\\
       1   10 11 13  5 14   4   9\
\
			\
	                  	5\
	         /                      	   \\ \
                   4                               7\
              /         \\                        /       \\\
          3                12               6           8\
        /   \\            /       \\            /    \\        /  \\\
     2     10        11      13       5   14     4     9\
     / \\    /  \\        /  \\      /  \\       /\\    /\\      /\\     /\\\
   1  15 5  16   2   12 9   17  4 9 3 18 1 7  5 10\
\
If a full tree has height h, the tree has 2^(h+1) - 1 nodes.\
If a full tree has n nodes, the tree has height of log(n + 1) - 1.\
\
13. There is a question mark next to the insertion-time for ArrayList because that is the worst-case scenario. The search time for a sorted-list is O(log(n)) because you only have to go through the sorted list log(n) times.\
\
14. You should add toString().\
\
15. It compiles because it is a run-time error, not a compilation error. During execution, it says that there is a class cast exception because TribeInfo cannot be cast to string.\
\
17. K % 5 gives the list to which K should belong.\
}